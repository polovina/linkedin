class MoviesController < ApplicationController

  def show
    id = params[:id] # retrieve movie ID from URI route
    @movie = Movie.find(id) # look up movie by unique ID
    session[:notice]

    # will render app/views/movies/show.<extension> by default
  end

 def index
   
   
   #creating check boxes
   @all_ratings=Hash.new(false)
   Movie.select(:rating).group(:rating).each{|movie| @all_ratings[movie[:rating]]=false}
   
   if (params[:ratings] || params[:sort])
    #getting filter and sorting from url
   @filter=params[:ratings] ? params[:ratings] : @all_ratings
   @sort=params[:sort] ? params[:sort] : "id"
   #adjusting model
   @movies=Movie.where({:rating=>@filter.keys}).order(@sort +" ASC").all
   #passing checked values to view
   @filter.each_key{|value| @all_ratings[value]=true}
   #storing session values
   session[:sort_settings]=@sort
   session[:filter_settings]=@filter
   else if (session[:sort_settings].nil?)
           @movies=Movie.all
           @sort="id"
        else
          redirect_to movies_path(:sort=>session[:sort_settings], :ratings=>session[:filter_settings])
        end
   #raise !session[:sort_settings].inspect
   end
 
  
  end


  def new
    # default: render 'new' template
  end

  def create
    @movie = Movie.create!(params[:movie])
    flash[:notice] = "#{@movie.title} was successfully created."
    redirect_to movies_path
  end

  def edit
    @movie = Movie.find params[:id]
  end

  def update
    @movie = Movie.find params[:id]
    @movie.update_attributes!(params[:movie])
    flash[:notice] = "#{@movie.title} was successfully updated."
    redirect_to movie_path(@movie)
  end

  def destroy
    @movie = Movie.find(params[:id])
    @movie.destroy
    flash[:notice] = "Movie '#{@movie.title}' deleted."
    redirect_to movies_path
  end

end
